#ifndef  SKILL_CORE
#define SKILL_CORE

#ifndef BWL_SUPPORT
	ERROR Skill core need Null-Bwl and Bwl-Support installed !
#endif // BWL_SUPPORT


#include "Core/Tester.lyn.event"


ALIGN 4
#include "Core/Misc.lyn.event"

#include "Core/SkillFastList.lyn.event"

// ====================================================
//                     Skill Info
// ====================================================
ALIGN 4
SkillInfoTable:
	//8*0x100 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0

#define InjectSkillInfo(aSkillId, aSkillInfo) "PUSH; ORG SkillInfoTable+4*(aSkillId); POIN (aSkillInfo); POP"




// ====================================================
//                      Skill Tester
// ====================================================
ALIGN 4
SkillTester:
	POIN JudgeSkillFast




// ====================================================
//                   Skill Icon Display
// ====================================================
#ifndef ICON_DISPLAY_INCLUDED
	ERROR Need core-support of Patch: IconDisplay from StanHash/SkillsLite!
#endif // ICON_DISPLAY_INCLUDED

InjectIconSheet(ICON_SHEET_SKILLS, GetSkillIconGfx)



// ====================================================
//                      Stat Screen
//                       Skill Page
// ====================================================

#include "SkillPage/DrawSkill.lyn.event"
#include "SkillPage/rText.lyn.event"

PUSH
// Null draw-Bwl to draw skill-page
	ORG $086FAC
	jumpToHack(DrawSkillPage)
	PROTECT $86FAC $870A0
POP


// ====================================================
//            Prep Screen Pick-Skill Page
// ====================================================
#include "PrepSkillScreen/PrepSkillScreen.event"



// ====================================================
//                       Skill Anim
// ====================================================

#include "SkillAnimActivition/SkillAnimOn.lyn.event"
#include "SkillAnimActivition/SkillAnimOnASM.lyn.event"


ALIGN 4
SkillAnimationTable:
	//8*0x100 0
	POIN 0x806E311	// DefaultOffsensiveSkillAnim
	WORD   0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0
	WORD 0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0  0 0 0 0

#define InjectSkillAnimation(SkillID,function) " PUSH; ORG (SkillAnimationTable + (4*SkillID)); POIN function|1; POP"

PUSH
	ORG $59048
	jumpToHack(SkillActivationAnims)
	
	// Make defensive skill use opponent's x-location.
	// Replace proc loop with proc call (can yield).
	// This means we no longer have to break proc loop,
	// allowing us to replace the call to breakProcLoop
	// with a call to getTargetAIS.
	// Originally the proc loop would immediately break.
	// It seems whoever designed battle animation stuff
	// didn't know about proc call.
	ORG $5D9408
		BYTE 0x16
	ORG $6E614
		WORD 0xF7EB6DE0 0x2302FE4D 0x48055E1A
		WORD 0x21802301 0xF0040049 0x2000F9BD
		WORD 0xBC02BC10 0x00004708

POP

#include "SkillAnimActivition/SkillBox-SkillSystemFE8/SkillProcDisplay.lyn.event"

ALIGN 4
SPD_ProcDisplayTiles:
	#incbin "SkillAnimActivition/data/ProcDisplayTiles.4bpp.lz"


#endif // SKILL_CORE